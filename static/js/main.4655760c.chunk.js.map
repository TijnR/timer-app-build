{"version":3,"sources":["components/Title.tsx","components/Time.tsx","components/Timer.tsx","components/TimerContainer.tsx","components/QuickTimesContainer.tsx","components/CostomTimeSelect.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Title","className","TimeStyles","fontSize","fontFamily","margin","Time","minutes","seconds","displaySeconds","displayMinutes","style","bruh","Audio","TimerStyles","display","Timer","props","resetMinutes","quickTime","useState","setMinutes","setSeconds","counting","setCounting","console","log","useEffect","countS","countM","interval","setInterval","clearInterval","play","playPauseButton","onClick","setTimeout","TimerContainerStyles","flexDirection","TimerContainer","QuickTimesContainerStyles","alignItems","justifyContent","padding","ButtonStyle","times","QuickTimesContainer","buttons","map","time","i","getQuickTime","marginBottom","CostomTimeSelectStyles","CostomTimeSelect","App","setQuickTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4655760c.chunk.js","sourcesContent":["import React from 'react'\n\n\n\nfunction Title() {\n  return <h1 className=\"title__styles\">Online Timer</h1>\n}\n\nexport default Title\n","import React from 'react'\n\nconst TimeStyles = {\n  fontSize: '80px',\n  fontFamily: 'retroWave',\n  margin: '20px 0'\n\n}\n\ninterface Props {\n  minutes: number\n  seconds: number\n}\n\nexport const Time = ({ minutes, seconds }: Props) => {\n  const displaySeconds = seconds < 10 ? '0' + seconds : seconds\n  const displayMinutes = minutes < 10 ? '0' + minutes : minutes\n  return (\n    <h1 style={TimeStyles}>\n      <pre>\n        {displayMinutes} : {displaySeconds}\n      </pre>\n    </h1>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Time } from './Time'\n\n\nconst bruh = new Audio('https://orangefreesounds.com/wp-content/uploads/2018/02/Bruh-sound-effect.mp3?_=1')\n\nconst TimerStyles = {\n  display: 'column' as 'column',\n}\n\ninterface Props {\n  quickTime: number\n}\n\nconst Timer = (props: Props) => {\n  let resetMinutes: number = props.quickTime || 10\n  let resetSeconds: number = 0\n  const [minutes, setMinutes] = useState(resetMinutes)\n  const [seconds, setSeconds] = useState(resetSeconds)\n  const [counting, setCounting] = useState(false)\n\n  console.log(props.quickTime);\n\n  useEffect(() => {\n    setMinutes(resetMinutes)\n  }, [resetMinutes])\n  \n\n  const incrementMinutes = () => {\n    setMinutes(minutes + 1)\n    \n    \n  }\n\n  const decrementMinutes = () => {\n    if (minutes > 0) {\n      setMinutes(minutes - 1)\n    }\n  }\n\n  const incrementSeconds = () => {\n    setSeconds(seconds + 5)\n    if (seconds === 55) {\n      setSeconds(0)\n    }\n  }\n\n  const decrementSeconds = () => {\n    if (seconds > 0) {\n      setSeconds(seconds - 5)\n    } else {\n      setSeconds(55)\n    }\n  }\n\n  const startTimer = () => {\n    setCounting(!counting)\n  }\n\n  const resetTimer = () => {\n    setCounting(false)\n    setTimeout(() => {\n      console.log('resetTimer')\n      setSeconds(resetSeconds)\n      setMinutes(resetMinutes)\n    }, 0)\n  }\n\n  useEffect(() => {\n    console.log('change effect')\n\n    if (counting) {\n      let countS = seconds\n      let countM = minutes\n      const interval = setInterval(() => {\n        console.log(countS)\n        console.log(countM)\n\n        if (countM === 0 && countS === 1) {\n          clearInterval(interval)\n          bruh.play()\n        }\n        if (countS === 0) {\n          countS = 59\n          countM--\n\n          setSeconds(countS)\n          setMinutes(countM)\n        } else {\n          countS--\n          setSeconds(countS)\n        }\n      }, 1000)\n\n      return () => {\n        clearInterval(interval)\n        setSeconds(countS)\n        setMinutes(countM)\n      }\n    }\n  }, [counting])\n\n  const playPauseButton = counting ? 'pause' : 'play'\n\n  return (\n    <div style={TimerStyles}>\n      <div className=\"timer__increment flex-center\">\n        <button className=\"button timer__buttons\" onClick={incrementMinutes}>+</button>\n        <button className=\"button timer__buttons\" onClick={incrementSeconds}>+</button>\n      </div>\n      <Time minutes={minutes} seconds={seconds} />\n      <div className=\"timer__decrement flex-center\">\n        <button className=\"button timer__buttons\" onClick={decrementMinutes}>-</button>\n        <button className=\"button timer__buttons\" onClick={decrementSeconds}>-</button>\n      </div>\n      <div className=\"timer__options flex-center\">\n        <button className=\"button option__buttons\" onClick={startTimer}>{playPauseButton}</button>\n        <button className=\"button option__buttons\" onClick={resetTimer}>reset</button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Timer\n","import React from 'react'\nimport Title from './Title'\nimport Timer from './Timer'\n\nconst TimerContainerStyles = {\n  display: 'flex',\n  flexDirection: 'column' as 'column',\n}\n\ninterface Props {\n  quickTime: number\n}\n\nfunction TimerContainer(props: Props) {\n  return (\n    <div style={TimerContainerStyles}>\n      <Title />\n      <Timer quickTime={props.quickTime}/>\n    </div>\n  )\n}\n\nexport default TimerContainer\n","import React from 'react'\n\nconst QuickTimesContainerStyles = {\n  display: 'flex',\n  flexDirection: 'column' as 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: '20px 30px',\n}\n\nconst ButtonStyle = {\n  margin: '10px 0',\n}\n\nconst times = [5, 10, 15, 20, 25, 30, 45]\n\ninterface Props {\n  getQuickTime: any\n}\n\nexport const QuickTimesContainer = (props: Props) => {\n  console.log(props)\n\n  const buttons = times.map((time, i) => (\n    <button\n      key={i}\n      style={ButtonStyle}\n      className=\"button top-left-radius\"\n      onClick={() => props.getQuickTime(time)}\n    >\n      <span>{time}:00</span>\n    </button>\n  ))\n  return (\n    <div style={QuickTimesContainerStyles}>\n      <h2\n        style={{ marginBottom: '30px', fontSize: '40px' }}\n        className=\"title__styles\"\n      >\n        Quick Time Select\n      </h2>\n      {buttons}\n    </div>\n  )\n}\n","import React from 'react'\n\nconst CostomTimeSelectStyles = {\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    alignItems: \"center\",\n    justifyContent: 'center',\n    padding: '20px 30px',\n}\n\ninterface Props {\n    \n}\n\nexport const CostomTimeSelect = (props: Props) => {\n    return (\n        <div style={CostomTimeSelectStyles}>\n            <h2 style={{fontSize: '40px'}} className=\"title__styles\">Costom Time Select</h2>\n\n            <h4>|| In progress ||</h4>\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport './App.css'\nimport TimerContainer from './components/TimerContainer'\nimport { QuickTimesContainer } from './components/QuickTimesContainer';\nimport { CostomTimeSelect } from './components/CostomTimeSelect';\n\nfunction App() {\n  const [quickTime, setQuickTime] = useState(0)\n\n  const getQuickTime = (time: number) => {\n    setQuickTime(time)\n  }\n\n  console.log(quickTime);\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"App__inner\">\n        <section className=\"App__left section\">\n          <QuickTimesContainer getQuickTime={getQuickTime}/></section>\n        <section className=\"App__middle\">\n          <TimerContainer quickTime={quickTime}/>\n        </section>\n        <section className=\"App__right\">\n        <CostomTimeSelect />\n        </section>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}